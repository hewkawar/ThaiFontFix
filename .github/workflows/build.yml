name: Build And Release
on:
  release:
    types: [created]

jobs:
  config:
    name: Config Resource Pack
    runs-on: ubuntu-latest
    outputs:
      pack_version: ${{ steps.read_config.outputs.pack_version }}
      version: ${{ steps.read_config.outputs.version }}
      pack_game_version: ${{ steps.read_config.outputs.pack_game_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read config
        id: read_config
        run: |
          pack_version=$(jq -r '.pack_version' ./configs/version.json)
          pack_game_version=$(jq -r '.pack_game_version' ./configs/version.json)
          version=$(jq -r '.version' ./configs/version.json)
          echo "pack_version=$pack_version" >> $GITHUB_OUTPUT
          echo "pack_game_version=$pack_game_version" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT

  build_iannnnnAMD:
    name: Build Resource Pack (iannnnnAMD)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use iannnnnAMD Font
        run: |
          cp -f ./configs/fonts/iannnnnAMD.json ./resourcepack/assets/minecraft/font/default.json
          cp -f ./font/iannnnnAMD.ttf ./resourcepack/assets/minecraft/font/font.ttf

      - name: Building Resource Pack
        uses: actions/upload-artifact@v4
        with:
          name: ThaiFontFix-iannnnnAMD
          path: ./resourcepack

  build_Kanit:
    name: Build Resource Pack (Kanit)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Kanit Font
        run: |
          cp -f ./configs/fonts/Kanit.json ./resourcepack/assets/minecraft/font/default.json
          cp -f ./font/Kanit.ttf ./resourcepack/assets/minecraft/font/font.ttf

      - name: Building Resource Pack
        uses: actions/upload-artifact@v4
        with:
          name: ThaiFontFix-Kanit
          path: ./resourcepack

  release-iannnnnAMD:
    name: Release Resource Pack (iannnnnAMD)
    runs-on: ubuntu-latest
    needs: [config, build_iannnnnAMD]
    steps:
      - name: Download Artifacts
        id: download_artifacts
        uses: actions/download-artifact@v4
        with:
          name: ThaiFontFix-iannnnnAMD

      - name: Zip artifact for deployment
        run: zip ThaiFontFix-${{ github.event.release.name }}.zip ./ -r

      - name: Upload Assets
        id: upload_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ThaiFontFix-${{ github.event.release.name }}.zip
          asset_name: ThaiFontFix-${{ github.event.release.name }}.zip
          asset_content_type: application/zip

      - name: Modrinth Release
        uses: dsx137/modrinth-release-action@main
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
        with:
          name: ThaiFontFix-v${{ github.event.release.name }}
          project_id: nAi1yORJ
          loaders: minecraft
          game_versions: ${{ needs.config.outputs.pack_game_version }}
          version_number: thaifontfix-${{ needs.config.outputs.version }}-${{ needs.config.outputs.pack_version }}
          files: |
            ./ThaiFontFix-${{ github.event.release.name }}.zip
          version_type: ${{ github.event.release.prerelease == true && 'beta' || 'release' }}
          featured: true
          status: "listed"

      - name: "Upload to CurseForge"
        uses: itsmeow/curseforge-upload@v3
        with:
          file_path: "ThaiFontFix-${{ github.event.release.name }}.zip"
          game_endpoint: "minecraft"
          game_versions: "Minecraft ${{ needs.config.outputs.pack_game_version }}"
          project_id: "997925"
          release_type: ${{ github.event.release.prerelease == true && 'beta' || 'release' }}
          token: "${{ secrets.CURSEFORGE_TOKEN }}"

  release-Kanit:
    name: Release Resource Pack (Kanit)
    runs-on: ubuntu-latest
    needs: [config, build_Kanit]
    steps:
      - name: Download Artifacts
        id: download_artifacts
        uses: actions/download-artifact@v4
        with:
          name: ThaiFontFix-Kanit

      - name: Zip artifact for deployment
        run: zip ThaiFontFix-Kanit-${{ github.event.release.name }}.zip ./ -r

      - name: Upload Assets
        id: upload_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ThaiFontFix-Kanit-${{ github.event.release.name }}.zip
          asset_name: ThaiFontFix-Kanit-${{ github.event.release.name }}.zip
          asset_content_type: application/zip

      - name: Modrinth Release
        uses: dsx137/modrinth-release-action@main
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
        with:
          name: ThaiFontFix-v${{ github.event.release.name }}
          project_id: hXpFKA81
          loaders: minecraft
          game_versions: ${{ needs.config.outputs.pack_game_version }}
          version_number: thaifontfix-kanit-${{ github.event.release.name }}
          files: |
            ./ThaiFontFix-Kanit-${{ github.event.release.name }}.zip
          version_type: ${{ github.event.release.prerelease == true && 'beta' || 'release' }}
          featured: true
          status: "listed"

      # - name: "Upload to CurseForge"
      #   uses: itsmeow/curseforge-upload@v3
      #   with:
      #     file_path: "ThaiFontFix-${{ github.event.release.name }}.zip"
      #     game_endpoint: "minecraft"
      #     game_versions: "Minecraft ${{ needs.config.outputs.pack_game_version }}"
      #     project_id: "997925"
      #     release_type: ${{ github.event.release.prerelease == true && 'beta' || 'release' }}
      #     token: "${{ secrets.CURSEFORGE_TOKEN }}"
